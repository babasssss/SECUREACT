{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  },\n  timeout: 10000\n});\napi.interceptors.request.use(config => {\n  const authState = window.localStorage.getItem('AUTH');\n  console.log(authState);\n  const auth = JSON.parse(authState);\n  if (auth.user && auth.token) {\n    config.headers.Authorization = `Bearer ${auth.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst getIndex = async () => {\n  try {\n    const response = await api.get('/');\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst getRestaurants = async () => {\n  try {\n    const response = await api.get('/restaurants?populate=*');\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst getRestaurantById = async id => {\n  try {\n    const response = await api.get(`/restaurants/${id}?populate=*`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst getDishesByRestaurantId = async id => {\n  try {\n    const response = await api.get(`/dishes?filters[restaurant][id][$eq]=${id}&populate=*`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst createRestaurant = async formData => {\n  try {\n    const _data = {\n      data: {\n        // Spécifique à Strapi\n        name: formData.name,\n        description: formData.description,\n        coordinates: {\n          latitude: formData.latitude,\n          longitude: formData.longitude\n        }\n      }\n    };\n    const response = await api.post('/restaurants', _data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst login = async credential => {\n  const response = await api.post('auth/local', credential);\n  return response.data;\n};\nconst register = async credential => {\n  const response = await api.post('auth/local/register', credential);\n  return response.data;\n};\nexport { getRestaurants, getRestaurantById, getDishesByRestaurantId, createRestaurant, login, register, getIndex };","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","Accept","timeout","interceptors","request","use","config","authState","window","localStorage","getItem","console","log","auth","JSON","parse","user","token","Authorization","error","Promise","reject","getIndex","response","get","getRestaurants","data","getRestaurantById","id","getDishesByRestaurantId","createRestaurant","formData","_data","name","description","coordinates","latitude","longitude","post","login","credential","register"],"sources":["C:/Users/basti/Documents/MyDigitalSchool/Production-React-NodeJS/SECUREACT/frontend/src/services/Api.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json'\r\n  },\r\n  timeout: 10000\r\n})\r\n\r\napi.interceptors.request.use(\r\n  config => {\r\n    const authState = window.localStorage.getItem('AUTH')\r\n    console.log(authState)\r\n    const auth = JSON.parse(authState)\r\n    if (auth.user && auth.token) {\r\n      config.headers.Authorization = `Bearer ${auth.token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nconst getIndex = async () => {\r\n  try {\r\n    const response = await api.get('/')\r\n    return response\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nconst getRestaurants = async () => {\r\n  try {\r\n    const response = await api.get('/restaurants?populate=*')\r\n    return response.data\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nconst getRestaurantById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/restaurants/${id}?populate=*`)\r\n    return response.data\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nconst getDishesByRestaurantId = async (id) => {\r\n  try {\r\n    const response = await api.get(`/dishes?filters[restaurant][id][$eq]=${id}&populate=*`)\r\n    return response.data\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nconst createRestaurant = async (formData) => {\r\n  try {\r\n    const _data = {\r\n      data: { // Spécifique à Strapi\r\n        name: formData.name,\r\n        description: formData.description,\r\n        coordinates: {\r\n          latitude: formData.latitude,\r\n          longitude: formData.longitude\r\n        }\r\n      }\r\n    }\r\n    const response = await api.post('/restaurants', _data)\r\n    return response.data\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\nconst login = async (credential) => {\r\n  const response = await api.post('auth/local', credential)\r\n  return response.data\r\n}\r\n\r\nconst register = async (credential) => {\r\n  const response = await api.post('auth/local/register', credential)\r\n  return response.data\r\n}\r\n\r\nexport {\r\n  getRestaurants,\r\n  getRestaurantById,\r\n  getDishesByRestaurantId,\r\n  createRestaurant,\r\n  login,\r\n  register,\r\n  getIndex\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}