{"ast":null,"code":"import _defineProperty from \"C:/Users/basti/Documents/MyDigitalSchool/React/MDS-B3-2023-Food-Delivery/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/basti/Documents/MyDigitalSchool/React/MDS-B3-2023-Food-Delivery/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/basti/Documents/MyDigitalSchool/React/MDS-B3-2023-Food-Delivery/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/basti/Documents/MyDigitalSchool/React/MDS-B3-2023-Food-Delivery/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"C:/Users/basti/Documents/MyDigitalSchool/React/MDS-B3-2023-Food-Delivery/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _excluded = [\"theme\", \"type\"],\n  _excluded2 = [\"delay\", \"staleId\"];\nimport t, { isValidElement as e, useRef as n, useLayoutEffect as o, useEffect as s, cloneElement as a, useReducer as r, useState as i, forwardRef as l } from \"react\";\nimport c from \"clsx\";\nvar u = function u(t) {\n    return \"number\" == typeof t && !isNaN(t);\n  },\n  d = function d(t) {\n    return \"string\" == typeof t;\n  },\n  p = function p(t) {\n    return \"function\" == typeof t;\n  },\n  m = function m(t) {\n    return d(t) || p(t) ? t : null;\n  },\n  f = function f(t) {\n    return e(t) || d(t) || p(t) || u(t);\n  };\nfunction g(t, e, n) {\n  void 0 === n && (n = 300);\n  var o = t.scrollHeight,\n    s = t.style;\n  requestAnimationFrame(function () {\n    s.minHeight = \"initial\", s.height = o + \"px\", s.transition = \"all \".concat(n, \"ms\"), requestAnimationFrame(function () {\n      s.height = \"0\", s.padding = \"0\", s.margin = \"0\", setTimeout(e, n);\n    });\n  });\n}\nfunction h(e) {\n  var a = e.enter,\n    r = e.exit,\n    _e$appendPosition = e.appendPosition,\n    i = _e$appendPosition === void 0 ? !1 : _e$appendPosition,\n    _e$collapse = e.collapse,\n    l = _e$collapse === void 0 ? !0 : _e$collapse,\n    _e$collapseDuration = e.collapseDuration,\n    c = _e$collapseDuration === void 0 ? 300 : _e$collapseDuration;\n  return function (e) {\n    var u = e.children,\n      d = e.position,\n      p = e.preventExitTransition,\n      m = e.done,\n      f = e.nodeRef,\n      h = e.isIn;\n    var y = i ? \"\".concat(a, \"--\").concat(d) : a,\n      v = i ? \"\".concat(r, \"--\").concat(d) : r,\n      T = n(0);\n    return o(function () {\n      var _t$classList2;\n      var t = f.current,\n        e = y.split(\" \"),\n        n = function n(o) {\n          var _t$classList;\n          o.target === f.current && (t.dispatchEvent(new Event(\"d\")), t.removeEventListener(\"animationend\", n), t.removeEventListener(\"animationcancel\", n), 0 === T.current && \"animationcancel\" !== o.type && (_t$classList = t.classList).remove.apply(_t$classList, _toConsumableArray(e)));\n        };\n      (_t$classList2 = t.classList).add.apply(_t$classList2, _toConsumableArray(e)), t.addEventListener(\"animationend\", n), t.addEventListener(\"animationcancel\", n);\n    }, []), s(function () {\n      var t = f.current,\n        e = function e() {\n          t.removeEventListener(\"animationend\", e), l ? g(t, m, c) : m();\n        };\n      h || (p ? e() : (T.current = 1, t.className += \" \".concat(v), t.addEventListener(\"animationend\", e)));\n    }, [h]), t.createElement(t.Fragment, null, u);\n  };\n}\nfunction y(t, e) {\n  return {\n    content: t.content,\n    containerId: t.props.containerId,\n    id: t.props.toastId,\n    theme: t.props.theme,\n    type: t.props.type,\n    data: t.props.data || {},\n    isLoading: t.props.isLoading,\n    icon: t.props.icon,\n    status: e\n  };\n}\nvar v = {\n    list: new Map(),\n    emitQueue: new Map(),\n    on: function on(t, e) {\n      return this.list.has(t) || this.list.set(t, []), this.list.get(t).push(e), this;\n    },\n    off: function off(t, e) {\n      if (e) {\n        var _n = this.list.get(t).filter(function (t) {\n          return t !== e;\n        });\n        return this.list.set(t, _n), this;\n      }\n      return this.list.delete(t), this;\n    },\n    cancelEmit: function cancelEmit(t) {\n      var e = this.emitQueue.get(t);\n      return e && (e.forEach(clearTimeout), this.emitQueue.delete(t)), this;\n    },\n    emit: function emit(t) {\n      var _arguments = arguments,\n        _this = this;\n      this.list.has(t) && this.list.get(t).forEach(function (e) {\n        var n = setTimeout(function () {\n          e.apply(void 0, _toConsumableArray([].slice.call(_arguments, 1)));\n        }, 0);\n        _this.emitQueue.has(t) || _this.emitQueue.set(t, []), _this.emitQueue.get(t).push(n);\n      });\n    }\n  },\n  T = function T(e) {\n    var n = e.theme,\n      o = e.type,\n      s = _objectWithoutProperties(e, _excluded);\n    return t.createElement(\"svg\", _objectSpread({\n      viewBox: \"0 0 24 24\",\n      width: \"100%\",\n      height: \"100%\",\n      fill: \"colored\" === n ? \"currentColor\" : \"var(--toastify-icon-color-\".concat(o, \")\")\n    }, s));\n  },\n  E = {\n    info: function info(e) {\n      return t.createElement(T, _objectSpread({}, e), t.createElement(\"path\", {\n        d: \"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"\n      }));\n    },\n    warning: function warning(e) {\n      return t.createElement(T, _objectSpread({}, e), t.createElement(\"path\", {\n        d: \"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"\n      }));\n    },\n    success: function success(e) {\n      return t.createElement(T, _objectSpread({}, e), t.createElement(\"path\", {\n        d: \"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"\n      }));\n    },\n    error: function error(e) {\n      return t.createElement(T, _objectSpread({}, e), t.createElement(\"path\", {\n        d: \"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"\n      }));\n    },\n    spinner: function spinner() {\n      return t.createElement(\"div\", {\n        className: \"Toastify__spinner\"\n      });\n    }\n  };\nfunction C(t) {\n  var _r = r(function (t) {\n      return t + 1;\n    }, 0),\n    _r2 = _slicedToArray(_r, 2),\n    o = _r2[1],\n    _i = i([]),\n    _i2 = _slicedToArray(_i, 2),\n    l = _i2[0],\n    c = _i2[1],\n    g = n(null),\n    h = n(new Map()).current,\n    T = function T(t) {\n      return -1 !== l.indexOf(t);\n    },\n    C = n({\n      toastKey: 1,\n      displayedToast: 0,\n      count: 0,\n      queue: [],\n      props: t,\n      containerId: null,\n      isToastActive: T,\n      getToast: function getToast(t) {\n        return h.get(t);\n      }\n    }).current;\n  function b(t) {\n    var e = t.containerId;\n    var n = C.props.limit;\n    !n || e && C.containerId !== e || (C.count -= C.queue.length, C.queue = []);\n  }\n  function I(t) {\n    c(function (e) {\n      return null == t ? [] : e.filter(function (e) {\n        return e !== t;\n      });\n    });\n  }\n  function _() {\n    var _C$queue$shift = C.queue.shift(),\n      t = _C$queue$shift.toastContent,\n      e = _C$queue$shift.toastProps,\n      n = _C$queue$shift.staleId;\n    O(t, e, n);\n  }\n  function L(t, n) {\n    var s = n.delay,\n      r = n.staleId,\n      i = _objectWithoutProperties(n, _excluded2);\n    if (!f(t) || function (t) {\n      return !g.current || C.props.enableMultiContainer && t.containerId !== C.props.containerId || h.has(t.toastId) && null == t.updateId;\n    }(i)) return;\n    var l = i.toastId,\n      c = i.updateId,\n      T = i.data,\n      b = C.props,\n      L = function L() {\n        return I(l);\n      },\n      N = null == c;\n    N && C.count++;\n    var M = _objectSpread(_objectSpread(_objectSpread({}, b), {}, {\n      style: b.toastStyle,\n      key: C.toastKey++\n    }, Object.fromEntries(Object.entries(i).filter(function (t) {\n      var _t = _slicedToArray(t, 2),\n        e = _t[0],\n        n = _t[1];\n      return null != n;\n    }))), {}, {\n      toastId: l,\n      updateId: c,\n      data: T,\n      closeToast: L,\n      isIn: !1,\n      className: m(i.className || b.toastClassName),\n      bodyClassName: m(i.bodyClassName || b.bodyClassName),\n      progressClassName: m(i.progressClassName || b.progressClassName),\n      autoClose: !i.isLoading && (R = i.autoClose, w = b.autoClose, !1 === R || u(R) && R > 0 ? R : w),\n      deleteToast: function deleteToast() {\n        var t = y(h.get(l), \"removed\");\n        h.delete(l), v.emit(4, t);\n        var e = C.queue.length;\n        if (C.count = null == l ? C.count - C.displayedToast : C.count - 1, C.count < 0 && (C.count = 0), e > 0) {\n          var _t2 = null == l ? C.props.limit : 1;\n          if (1 === e || 1 === _t2) C.displayedToast++, _();else {\n            var _n2 = _t2 > e ? e : _t2;\n            C.displayedToast = _n2;\n            for (var _t3 = 0; _t3 < _n2; _t3++) _();\n          }\n        } else o();\n      }\n    });\n    var R, w;\n    M.iconOut = function (t) {\n      var n = t.theme,\n        o = t.type,\n        s = t.isLoading,\n        r = t.icon,\n        i = null;\n      var l = {\n        theme: n,\n        type: o\n      };\n      return !1 === r || (p(r) ? i = r(l) : e(r) ? i = a(r, l) : d(r) || u(r) ? i = r : s ? i = E.spinner() : function (t) {\n        return t in E;\n      }(o) && (i = E[o](l))), i;\n    }(M), p(i.onOpen) && (M.onOpen = i.onOpen), p(i.onClose) && (M.onClose = i.onClose), M.closeButton = b.closeButton, !1 === i.closeButton || f(i.closeButton) ? M.closeButton = i.closeButton : !0 === i.closeButton && (M.closeButton = !f(b.closeButton) || b.closeButton);\n    var x = t;\n    e(t) && !d(t.type) ? x = a(t, {\n      closeToast: L,\n      toastProps: M,\n      data: T\n    }) : p(t) && (x = t({\n      closeToast: L,\n      toastProps: M,\n      data: T\n    })), b.limit && b.limit > 0 && C.count > b.limit && N ? C.queue.push({\n      toastContent: x,\n      toastProps: M,\n      staleId: r\n    }) : u(s) ? setTimeout(function () {\n      O(x, M, r);\n    }, s) : O(x, M, r);\n  }\n  function O(t, e, n) {\n    var o = e.toastId;\n    n && h.delete(n);\n    var s = {\n      content: t,\n      props: e\n    };\n    h.set(o, s), c(function (t) {\n      return [].concat(_toConsumableArray(t), [o]).filter(function (t) {\n        return t !== n;\n      });\n    }), v.emit(4, y(s, null == s.props.updateId ? \"added\" : \"updated\"));\n  }\n  return s(function () {\n    return C.containerId = t.containerId, v.cancelEmit(3).on(0, L).on(1, function (t) {\n      return g.current && I(t);\n    }).on(5, b).emit(2, C), function () {\n      h.clear(), v.emit(3, C);\n    };\n  }, []), s(function () {\n    C.props = t, C.isToastActive = T, C.displayedToast = l.length;\n  }), {\n    getToastToRender: function getToastToRender(e) {\n      var n = new Map(),\n        o = Array.from(h.values());\n      return t.newestOnTop && o.reverse(), o.forEach(function (t) {\n        var e = t.props.position;\n        n.has(e) || n.set(e, []), n.get(e).push(t);\n      }), Array.from(n, function (t) {\n        return e(t[0], t[1]);\n      });\n    },\n    containerRef: g,\n    isToastActive: T\n  };\n}\nfunction b(t) {\n  return t.targetTouches && t.targetTouches.length >= 1 ? t.targetTouches[0].clientX : t.clientX;\n}\nfunction I(t) {\n  return t.targetTouches && t.targetTouches.length >= 1 ? t.targetTouches[0].clientY : t.clientY;\n}\nfunction _(t) {\n  var _i3 = i(!1),\n    _i4 = _slicedToArray(_i3, 2),\n    o = _i4[0],\n    a = _i4[1],\n    _i5 = i(!1),\n    _i6 = _slicedToArray(_i5, 2),\n    r = _i6[0],\n    l = _i6[1],\n    c = n(null),\n    u = n({\n      start: 0,\n      x: 0,\n      y: 0,\n      delta: 0,\n      removalDistance: 0,\n      canCloseOnClick: !0,\n      canDrag: !1,\n      boundingRect: null,\n      didMove: !1\n    }).current,\n    d = n(t),\n    m = t.autoClose,\n    f = t.pauseOnHover,\n    g = t.closeToast,\n    h = t.onClick,\n    y = t.closeOnClick;\n  function v(e) {\n    if (t.draggable) {\n      \"touchstart\" === e.nativeEvent.type && e.nativeEvent.preventDefault(), u.didMove = !1, document.addEventListener(\"mousemove\", _), document.addEventListener(\"mouseup\", L), document.addEventListener(\"touchmove\", _), document.addEventListener(\"touchend\", L);\n      var _n3 = c.current;\n      u.canCloseOnClick = !0, u.canDrag = !0, u.boundingRect = _n3.getBoundingClientRect(), _n3.style.transition = \"\", u.x = b(e.nativeEvent), u.y = I(e.nativeEvent), \"x\" === t.draggableDirection ? (u.start = u.x, u.removalDistance = _n3.offsetWidth * (t.draggablePercent / 100)) : (u.start = u.y, u.removalDistance = _n3.offsetHeight * (80 === t.draggablePercent ? 1.5 * t.draggablePercent : t.draggablePercent / 100));\n    }\n  }\n  function T(e) {\n    if (u.boundingRect) {\n      var _u$boundingRect = u.boundingRect,\n        _n4 = _u$boundingRect.top,\n        _o = _u$boundingRect.bottom,\n        _s = _u$boundingRect.left,\n        _a = _u$boundingRect.right;\n      \"touchend\" !== e.nativeEvent.type && t.pauseOnHover && u.x >= _s && u.x <= _a && u.y >= _n4 && u.y <= _o ? C() : E();\n    }\n  }\n  function E() {\n    a(!0);\n  }\n  function C() {\n    a(!1);\n  }\n  function _(e) {\n    var n = c.current;\n    u.canDrag && n && (u.didMove = !0, o && C(), u.x = b(e), u.y = I(e), u.delta = \"x\" === t.draggableDirection ? u.x - u.start : u.y - u.start, u.start !== u.x && (u.canCloseOnClick = !1), n.style.transform = \"translate\".concat(t.draggableDirection, \"(\").concat(u.delta, \"px)\"), n.style.opacity = \"\" + (1 - Math.abs(u.delta / u.removalDistance)));\n  }\n  function L() {\n    document.removeEventListener(\"mousemove\", _), document.removeEventListener(\"mouseup\", L), document.removeEventListener(\"touchmove\", _), document.removeEventListener(\"touchend\", L);\n    var e = c.current;\n    if (u.canDrag && u.didMove && e) {\n      if (u.canDrag = !1, Math.abs(u.delta) > u.removalDistance) return l(!0), void t.closeToast();\n      e.style.transition = \"transform 0.2s, opacity 0.2s\", e.style.transform = \"translate\".concat(t.draggableDirection, \"(0)\"), e.style.opacity = \"1\";\n    }\n  }\n  s(function () {\n    d.current = t;\n  }), s(function () {\n    return c.current && c.current.addEventListener(\"d\", E, {\n      once: !0\n    }), p(t.onOpen) && t.onOpen(e(t.children) && t.children.props), function () {\n      var t = d.current;\n      p(t.onClose) && t.onClose(e(t.children) && t.children.props);\n    };\n  }, []), s(function () {\n    return t.pauseOnFocusLoss && (document.hasFocus() || C(), window.addEventListener(\"focus\", E), window.addEventListener(\"blur\", C)), function () {\n      t.pauseOnFocusLoss && (window.removeEventListener(\"focus\", E), window.removeEventListener(\"blur\", C));\n    };\n  }, [t.pauseOnFocusLoss]);\n  var O = {\n    onMouseDown: v,\n    onTouchStart: v,\n    onMouseUp: T,\n    onTouchEnd: T\n  };\n  return m && f && (O.onMouseEnter = C, O.onMouseLeave = E), y && (O.onClick = function (t) {\n    h && h(t), u.canCloseOnClick && g();\n  }), {\n    playToast: E,\n    pauseToast: C,\n    isRunning: o,\n    preventExitTransition: r,\n    toastRef: c,\n    eventHandlers: O\n  };\n}\nfunction L(e) {\n  var n = e.closeToast,\n    o = e.theme,\n    _e$ariaLabel = e.ariaLabel,\n    s = _e$ariaLabel === void 0 ? \"close\" : _e$ariaLabel;\n  return t.createElement(\"button\", {\n    className: \"Toastify__close-button Toastify__close-button--\".concat(o),\n    type: \"button\",\n    onClick: function onClick(t) {\n      t.stopPropagation(), n(t);\n    },\n    \"aria-label\": s\n  }, t.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, t.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\nfunction O(e) {\n  var n = e.delay,\n    o = e.isRunning,\n    s = e.closeToast,\n    _e$type = e.type,\n    a = _e$type === void 0 ? \"default\" : _e$type,\n    r = e.hide,\n    i = e.className,\n    l = e.style,\n    u = e.controlledProgress,\n    d = e.progress,\n    m = e.rtl,\n    f = e.isIn,\n    g = e.theme;\n  var h = r || u && 0 === d,\n    y = _objectSpread(_objectSpread({}, l), {}, {\n      animationDuration: \"\".concat(n, \"ms\"),\n      animationPlayState: o ? \"running\" : \"paused\",\n      opacity: h ? 0 : 1\n    });\n  u && (y.transform = \"scaleX(\".concat(d, \")\"));\n  var v = c(\"Toastify__progress-bar\", u ? \"Toastify__progress-bar--controlled\" : \"Toastify__progress-bar--animated\", \"Toastify__progress-bar-theme--\".concat(g), \"Toastify__progress-bar--\".concat(a), {\n      \"Toastify__progress-bar--rtl\": m\n    }),\n    T = p(i) ? i({\n      rtl: m,\n      type: a,\n      defaultClassName: v\n    }) : c(v, i);\n  return t.createElement(\"div\", _defineProperty({\n    role: \"progressbar\",\n    \"aria-hidden\": h ? \"true\" : \"false\",\n    \"aria-label\": \"notification timer\",\n    className: T,\n    style: y\n  }, u && d >= 1 ? \"onTransitionEnd\" : \"onAnimationEnd\", u && d < 1 ? null : function () {\n    f && s();\n  }));\n}\nvar N = function N(n) {\n    var _ref = _(n),\n      o = _ref.isRunning,\n      s = _ref.preventExitTransition,\n      r = _ref.toastRef,\n      i = _ref.eventHandlers,\n      l = n.closeButton,\n      u = n.children,\n      d = n.autoClose,\n      m = n.onClick,\n      f = n.type,\n      g = n.hideProgressBar,\n      h = n.closeToast,\n      y = n.transition,\n      v = n.position,\n      T = n.className,\n      E = n.style,\n      C = n.bodyClassName,\n      b = n.bodyStyle,\n      I = n.progressClassName,\n      N = n.progressStyle,\n      M = n.updateId,\n      R = n.role,\n      w = n.progress,\n      x = n.rtl,\n      $ = n.toastId,\n      k = n.deleteToast,\n      P = n.isIn,\n      B = n.isLoading,\n      D = n.iconOut,\n      A = n.closeOnClick,\n      z = n.theme,\n      F = c(\"Toastify__toast\", \"Toastify__toast-theme--\".concat(z), \"Toastify__toast--\".concat(f), {\n        \"Toastify__toast--rtl\": x\n      }, {\n        \"Toastify__toast--close-on-click\": A\n      }),\n      H = p(T) ? T({\n        rtl: x,\n        position: v,\n        type: f,\n        defaultClassName: F\n      }) : c(F, T),\n      S = !!w || !d,\n      q = {\n        closeToast: h,\n        type: f,\n        theme: z\n      };\n    var Q = null;\n    return !1 === l || (Q = p(l) ? l(q) : e(l) ? a(l, q) : L(q)), t.createElement(y, {\n      isIn: P,\n      done: k,\n      position: v,\n      preventExitTransition: s,\n      nodeRef: r\n    }, t.createElement(\"div\", _objectSpread(_objectSpread({\n      id: $,\n      onClick: m,\n      className: H\n    }, i), {}, {\n      style: E,\n      ref: r\n    }), t.createElement(\"div\", _objectSpread(_objectSpread({}, P && {\n      role: R\n    }), {}, {\n      className: p(C) ? C({\n        type: f\n      }) : c(\"Toastify__toast-body\", C),\n      style: b\n    }), null != D && t.createElement(\"div\", {\n      className: c(\"Toastify__toast-icon\", {\n        \"Toastify--animate-icon Toastify__zoom-enter\": !B\n      })\n    }, D), t.createElement(\"div\", null, u)), Q, t.createElement(O, _objectSpread(_objectSpread({}, M && !S ? {\n      key: \"pb-\".concat(M)\n    } : {}), {}, {\n      rtl: x,\n      theme: z,\n      delay: d,\n      isRunning: o,\n      isIn: P,\n      closeToast: h,\n      hide: g,\n      type: f,\n      style: N,\n      className: I,\n      controlledProgress: S,\n      progress: w || 0\n    }))));\n  },\n  M = function M(t, e) {\n    return void 0 === e && (e = !1), {\n      enter: \"Toastify--animate Toastify__\".concat(t, \"-enter\"),\n      exit: \"Toastify--animate Toastify__\".concat(t, \"-exit\"),\n      appendPosition: e\n    };\n  },\n  R = h(M(\"bounce\", !0)),\n  w = h(M(\"slide\", !0)),\n  x = h(M(\"zoom\")),\n  $ = h(M(\"flip\")),\n  k = l(function (e, n) {\n    var _C = C(e),\n      o = _C.getToastToRender,\n      a = _C.containerRef,\n      r = _C.isToastActive,\n      i = e.className,\n      l = e.style,\n      u = e.rtl,\n      d = e.containerId;\n    function f(t) {\n      var e = c(\"Toastify__toast-container\", \"Toastify__toast-container--\".concat(t), {\n        \"Toastify__toast-container--rtl\": u\n      });\n      return p(i) ? i({\n        position: t,\n        rtl: u,\n        defaultClassName: e\n      }) : c(e, m(i));\n    }\n    return s(function () {\n      n && (n.current = a.current);\n    }, []), t.createElement(\"div\", {\n      ref: a,\n      className: \"Toastify\",\n      id: d\n    }, o(function (e, n) {\n      var o = n.length ? _objectSpread({}, l) : _objectSpread(_objectSpread({}, l), {}, {\n        pointerEvents: \"none\"\n      });\n      return t.createElement(\"div\", {\n        className: f(e),\n        style: o,\n        key: \"container-\".concat(e)\n      }, n.map(function (e, o) {\n        var s = e.content,\n          a = e.props;\n        return t.createElement(N, _objectSpread(_objectSpread({}, a), {}, {\n          isIn: r(a.toastId),\n          style: _objectSpread(_objectSpread({}, a.style), {}, {\n            \"--nth\": o + 1,\n            \"--len\": n.length\n          }),\n          key: \"toast-\".concat(a.key)\n        }), s);\n      }));\n    }));\n  });\nk.displayName = \"ToastContainer\", k.defaultProps = {\n  position: \"top-right\",\n  transition: R,\n  autoClose: 5e3,\n  closeButton: L,\n  pauseOnHover: !0,\n  pauseOnFocusLoss: !0,\n  closeOnClick: !0,\n  draggable: !0,\n  draggablePercent: 80,\n  draggableDirection: \"x\",\n  role: \"alert\",\n  theme: \"light\"\n};\nvar P,\n  B = new Map(),\n  D = [],\n  A = 1;\nfunction z() {\n  return \"\" + A++;\n}\nfunction F(t) {\n  return t && (d(t.toastId) || u(t.toastId)) ? t.toastId : z();\n}\nfunction H(t, e) {\n  return B.size > 0 ? v.emit(0, t, e) : D.push({\n    content: t,\n    options: e\n  }), e.toastId;\n}\nfunction S(t, e) {\n  return _objectSpread(_objectSpread({}, e), {}, {\n    type: e && e.type || t,\n    toastId: F(e)\n  });\n}\nfunction q(t) {\n  return function (e, n) {\n    return H(e, S(t, n));\n  };\n}\nfunction Q(t, e) {\n  return H(t, S(\"default\", e));\n}\nQ.loading = function (t, e) {\n  return H(t, S(\"default\", _objectSpread({\n    isLoading: !0,\n    autoClose: !1,\n    closeOnClick: !1,\n    closeButton: !1,\n    draggable: !1\n  }, e)));\n}, Q.promise = function (t, e, n) {\n  var o,\n    s = e.pending,\n    a = e.error,\n    r = e.success;\n  s && (o = d(s) ? Q.loading(s, n) : Q.loading(s.render, _objectSpread(_objectSpread({}, n), s)));\n  var i = {\n      isLoading: null,\n      autoClose: null,\n      closeOnClick: null,\n      closeButton: null,\n      draggable: null\n    },\n    l = function l(t, e, s) {\n      if (null == e) return void Q.dismiss(o);\n      var a = _objectSpread(_objectSpread(_objectSpread({\n          type: t\n        }, i), n), {}, {\n          data: s\n        }),\n        r = d(e) ? {\n          render: e\n        } : e;\n      return o ? Q.update(o, _objectSpread(_objectSpread({}, a), r)) : Q(r.render, _objectSpread(_objectSpread({}, a), r)), s;\n    },\n    c = p(t) ? t() : t;\n  return c.then(function (t) {\n    return l(\"success\", r, t);\n  }).catch(function (t) {\n    return l(\"error\", a, t);\n  }), c;\n}, Q.success = q(\"success\"), Q.info = q(\"info\"), Q.error = q(\"error\"), Q.warning = q(\"warning\"), Q.warn = Q.warning, Q.dark = function (t, e) {\n  return H(t, S(\"default\", _objectSpread({\n    theme: \"dark\"\n  }, e)));\n}, Q.dismiss = function (t) {\n  B.size > 0 ? v.emit(1, t) : D = D.filter(function (e) {\n    return null != t && e.options.toastId !== t;\n  });\n}, Q.clearWaitingQueue = function (t) {\n  return void 0 === t && (t = {}), v.emit(5, t);\n}, Q.isActive = function (t) {\n  var e = !1;\n  return B.forEach(function (n) {\n    n.isToastActive && n.isToastActive(t) && (e = !0);\n  }), e;\n}, Q.update = function (t, e) {\n  void 0 === e && (e = {}), setTimeout(function () {\n    var n = function (t, e) {\n      var n = e.containerId;\n      var o = B.get(n || P);\n      return o && o.getToast(t);\n    }(t, e);\n    if (n) {\n      var _o2 = n.props,\n        _s2 = n.content,\n        _a2 = _objectSpread(_objectSpread(_objectSpread({\n          delay: 100\n        }, _o2), e), {}, {\n          toastId: e.toastId || t,\n          updateId: z()\n        });\n      _a2.toastId !== t && (_a2.staleId = t);\n      var _r3 = _a2.render || _s2;\n      delete _a2.render, H(_r3, _a2);\n    }\n  }, 0);\n}, Q.done = function (t) {\n  Q.update(t, {\n    progress: 1\n  });\n}, Q.onChange = function (t) {\n  return v.on(4, t), function () {\n    v.off(4, t);\n  };\n}, Q.POSITION = {\n  TOP_LEFT: \"top-left\",\n  TOP_RIGHT: \"top-right\",\n  TOP_CENTER: \"top-center\",\n  BOTTOM_LEFT: \"bottom-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  BOTTOM_CENTER: \"bottom-center\"\n}, Q.TYPE = {\n  INFO: \"info\",\n  SUCCESS: \"success\",\n  WARNING: \"warning\",\n  ERROR: \"error\",\n  DEFAULT: \"default\"\n}, v.on(2, function (t) {\n  P = t.containerId || t, B.set(P, t), D.forEach(function (t) {\n    v.emit(0, t.content, t.options);\n  }), D = [];\n}).on(3, function (t) {\n  B.delete(t.containerId || t), 0 === B.size && v.off(0).off(1).off(5);\n});\nexport { R as Bounce, $ as Flip, E as Icons, w as Slide, k as ToastContainer, x as Zoom, g as collapseToast, h as cssTransition, Q as toast, _ as useToast, C as useToastContainer };","map":{"version":3,"mappings":"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","names":["isNum","v","isNaN","isStr","isFn","parseClassName","canBeRendered","content","isValidElement","collapseToast","node","done","duration","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","cssTransition","enter","collapseDuration","exit","appendPosition","collapse","children","isIn","position","preventExitTransition","nodeRef","enterClassName","exitClassName","animationStep","useRef","useLayoutEffect","current","classToToken","split","onEntered","e","target","dispatchEvent","Event","removeEventListener","type","classList","remove","add","addEventListener","useEffect","onExited","className","React","toToastItem","toast","status","containerId","props","id","toastId","theme","data","isLoading","icon","eventManager","list","Map","emitQueue","on","event","callback","this","has","set","get","push","off","cb","filter","delete","cancelEmit","timers","forEach","clearTimeout","emit","timer","Svg","_ref","rest","viewBox","width","fill","Icons","info","d","warning","success","error","spinner","useToastContainer","useReducer","x","forceUpdate","useState","toastIds","setToastIds","containerRef","toastToRender","isToastActive","indexOf","instance","toastKey","displayedToast","count","queue","getToast","clearWaitingQueue","limit","length","removeToast","state","dequeueToast","shift","toastContent","toastProps","staleId","appendToast","buildToast","delay","options","enableMultiContainer","updateId","isNotValid","closeToast","isNotAnUpdate","toastStyle","key","Object","fromEntries","entries","_ref3","_","toastClassName","bodyClassName","progressClassName","autoClose","toastAutoClose","containerAutoClose","deleteToast","removed","queueLen","freeSlot","toDequeue","i","iconOut","Icon","iconProps","cloneElement","getIcon","onOpen","onClose","closeButton","clear","getToastToRender","toRender","collection","Array","from","values","newestOnTop","reverse","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","pauseOnHover","onClick","closeOnClick","onDragStart","draggable","nativeEvent","preventDefault","document","onDragMove","onDragEnd","getBoundingClientRect","draggableDirection","offsetWidth","draggablePercent","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","playToast","transform","opacity","Math","abs","once","pauseOnFocusLoss","hasFocus","window","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","stopPropagation","fillRule","ProgressBar","hide","userStyle","controlledProgress","progress","rtl","isHidden","animationDuration","animationPlayState","defaultClassName","cx","classNames","role","Toast","hideProgressBar","Transition","bodyStyle","progressStyle","cssClasses","isProgressControlled","closeButtonProps","Close","ref","getConfig","animationName","Bounce","Slide","Zoom","Flip","ToastContainer","forwardRef","getClassName","toastList","containerStyle","pointerEvents","map","displayName","defaultProps","latestInstance","containers","TOAST_ID","generateToastId","getToastId","dispatchToast","size","mergeOptions","createToastByType","loading","promise","pending","render","resetParams","resolver","input","result","dismiss","baseParams","params","update","then","catch","err","warn","dark","t","isActive","container","oldOptions","oldContent","nextOptions","onChange","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","containerInstance","item"],"sources":["C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\utils\\propValidator.ts","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\utils\\collapseToast.ts","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\utils\\cssTransition.tsx","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\utils\\mapper.ts","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\core\\eventManager.ts","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\components\\Icons.tsx","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\hooks\\useToastContainer.ts","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\hooks\\useToast.ts","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\components\\CloseButton.tsx","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\components\\ProgressBar.tsx","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\components\\Toast.tsx","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\components\\Transitions.tsx","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\components\\ToastContainer.tsx","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\core\\toast.ts","C:\\Users\\basti\\Documents\\MyDigitalSchool\\React\\MDS-B3-2023-Food-Delivery\\frontend\\node_modules\\react-toastify\\src\\utils\\constant.ts"],"sourcesContent":["import { isValidElement } from 'react';\n\nexport const isNum = (v: any): v is Number =>\n  typeof v === 'number' && !isNaN(v);\n\nexport const isStr = (v: any): v is String => typeof v === 'string';\n\nexport const isFn = (v: any): v is Function => typeof v === 'function';\n\nexport const parseClassName = (v: any) => (isStr(v) || isFn(v) ? v : null);\n\nexport const getAutoCloseDelay = (\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) =>\n  toastAutoClose === false || (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n\nexport const canBeRendered = <T>(content: T): boolean =>\n  isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      const node = nodeRef.current!;\n      const classToToken = enterClassName.split(' ');\n\n      const onEntered = (e: AnimationEvent) => {\n        if (e.target !== nodeRef.current) return;\n\n        node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n        node.removeEventListener('animationend', onEntered);\n        node.removeEventListener('animationcancel', onEntered);\n        if (\n          animationStep.current === AnimationStep.Enter &&\n          e.type !== 'animationcancel'\n        ) {\n          node.classList.remove(...classToToken);\n        }\n      };\n\n      const onEnter = () => {\n        node.classList.add(...classToToken);\n        node.addEventListener('animationend', onEntered);\n        node.addEventListener('animationcancel', onEntered);\n      };\n\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      const node = nodeRef.current!;\n\n      const onExited = () => {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      };\n\n      const onExit = () => {\n        animationStep.current = AnimationStep.Exit;\n        node.className += ` ${exitClassName}`;\n        node.addEventListener('animationend', onExited);\n      };\n\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit<TData>(\n    event: Event.Show,\n    content: React.ReactNode | ToastContent<TData>,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import React, { cloneElement, isValidElement } from 'react';\n\nimport { Theme, ToastProps, TypeOptions } from '../types';\nimport { Default, isFn, isNum, isStr } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n\nconst maybeIcon = (type: string): type is keyof typeof Icons => type in Icons;\n\nexport function getIcon({ theme, type, isLoading, icon }: ToastProps) {\n  let Icon: React.ReactNode = null;\n  const iconProps = { theme, type };\n\n  if (icon === false) {\n    // hide\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon) || isNum(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  } else if (maybeIcon(type)) {\n    Icon = Icons[type](iconProps);\n  }\n\n  return Icon;\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState,\n  ReactElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isFn,\n  isNum,\n  isStr,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\n\nimport { getIcon } from '../components/Icons';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => {\n      toastToRender.clear();\n      eventManager.emit(Event.WillUnmount, instance);\n    };\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      toastId == null ? [] : state.filter(id => id !== toastId)\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps = {\n      ...props,\n      style: props.toastStyle,\n      key: instance.toastKey++,\n      ...Object.fromEntries(\n        Object.entries(options).filter(([_, v]) => v != null)\n      ),\n      toastId,\n      updateId,\n      data,\n      closeToast,\n      isIn: false,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count =\n          toastId == null\n            ? instance.count - instance.displayedToast\n            : instance.count - 1;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = toastId == null ? instance.props.limit! : 1;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    } as ToastProps;\n\n    toastProps.iconOut = getIcon(toastProps);\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content as ReactElement, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      // required for ios safari to prevent default swipe behavior\n      if (e.nativeEvent.type === 'touchstart') e.nativeEvent.preventDefault();\n\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        e.nativeEvent.type !== 'touchend' &&\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { Default, isFn, Type } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type?: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type = Type.DEFAULT,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const isHidden = hide || (controlledProgress && progress === 0);\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: isHidden ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={isHidden ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n","import React, { cloneElement, isValidElement, ReactNode } from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { CloseButton } from './CloseButton';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks/useToast';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    iconOut,\n    closeOnClick,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    },\n    {\n      [`${Default.CSS_NAMESPACE}__toast--close-on-click`]: closeOnClick\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress || !autoClose;\n\n  const closeButtonProps = { closeToast, type, theme };\n  let Close: React.ReactNode = null;\n\n  if (closeButton === false) {\n    // hide\n  } else if (isFn(closeButton)) {\n    Close = closeButton(closeButtonProps);\n  } else if (isValidElement(closeButton)) {\n    Close = cloneElement(closeButton, closeButtonProps);\n  } else {\n    Close = CloseButton(closeButtonProps);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {iconOut != null && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {iconOut}\n            </div>\n          )}\n          <div>{children as ReactNode}</div>\n        </div>\n        {Close}\n        <ProgressBar\n          {...(updateId && !isProgressControlled\n            ? { key: `pb-${updateId}` }\n            : {})}\n          rtl={rtl}\n          theme={theme}\n          delay={autoClose as number}\n          isRunning={isRunning}\n          isIn={isIn}\n          closeToast={closeToast}\n          hide={hideProgressBar}\n          type={type}\n          style={progressStyle}\n          className={progressClassName}\n          controlledProgress={isProgressControlled}\n          progress={progress || 0}\n        />\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst getConfig = (animationName: string, appendPosition = false) => ({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__${animationName}-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__${animationName}-exit`,\n  appendPosition\n});\n\nconst Bounce = cssTransition(getConfig('bounce', true));\n\nconst Slide = cssTransition(getConfig('slide', true));\n\nconst Zoom = cssTransition(getConfig('zoom'));\n\nconst Flip = cssTransition(getConfig('flip'));\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        ...toastProps.style,\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: 'top-right',\n  transition: Bounce,\n  autoClose: 5000,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn, Type } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent<any>;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\nlet TOAST_ID = 1;\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  return container && container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return `${TOAST_ID++}`;\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  return options && (isStr(options.toastId) || isNum(options.toastId))\n    ? options.toastId\n    : generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast<TData>(\n  content: ToastContent<TData>,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return <TData = unknown>(\n    content: ToastContent<TData>,\n    options?: ToastOptions\n  ) => dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast<TData = unknown>(\n  content: ToastContent<TData>,\n  options?: ToastOptions\n) {\n  return dispatchToast(content, mergeOptions(Type.DEFAULT, options));\n}\n\ntoast.loading = <TData = unknown>(\n  content: ToastContent<TData>,\n  options?: ToastOptions\n) =>\n  dispatchToast(\n    content,\n    mergeOptions(Type.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<\n  TData = unknown,\n  TError = unknown,\n  TPending = unknown\n> {\n  pending?: string | UpdateOptions<TPending>;\n  success?: string | UpdateOptions<TData>;\n  error?: string | UpdateOptions<TError>;\n}\n\nfunction handlePromise<TData = unknown, TError = unknown, TPending = unknown>(\n  promise: Promise<TData> | (() => Promise<TData>),\n  { pending, error, success }: ToastPromiseParams<TData, TError, TPending>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null\n  };\n\n  const resolver = <T>(\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      } as UpdateOptions);\n    } else {\n      // using toast.promise without loading\n      toast(params!.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(Type.SUCCESS);\ntoast.info = createToastByType(Type.INFO);\ntoast.error = createToastByType(Type.ERROR);\ntoast.warning = createToastByType(Type.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(Type.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Clear, id);\n  } else {\n    queue = queue.filter(t => id != null && t.options.toastId !== id);\n  }\n};\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = <TData = unknown>(\n  toastId: Id,\n  options: UpdateOptions<TData> = {}\n) => {\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        delay: 100,\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * @deprecated\n * Will be removed in the next major release.\n */\ntoast.POSITION = POSITION;\n\n/**\n * @deprecated\n * Will be removed in the next major release.\n */\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\n/**\n * @deprecated\n */\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\n/**\n * @deprecated\n */\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Type {\n  INFO = 'info',\n  SUCCESS = 'success',\n  WARNING = 'warning',\n  ERROR = 'error',\n  DEFAULT = 'default'\n}\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}