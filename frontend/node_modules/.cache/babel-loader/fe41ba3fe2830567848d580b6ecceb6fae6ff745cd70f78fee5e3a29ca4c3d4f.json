{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\basti\\\\Documents\\\\MyDigitalSchool\\\\React\\\\MDS-B3-2023-Food-Delivery\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { login } from '../services/Api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nconst actionTypes = {\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOADING: 'LOADING',\n  LOGOUT: 'LOGOUT'\n};\nconst initialState = {\n  isAuthenticated: false,\n  token: null,\n  user: null,\n  loading: false,\n  error: null\n};\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        isAuthenticated: true,\n        token: action.data.jwt,\n        user: action.data.user,\n        loading: false,\n        error: null\n      };\n    case actionTypes.LOGIN_FAILURE:\n      return {\n        ...initialState,\n        error: action.data.error\n      };\n    case actionTypes.LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case actionTypes.LOGOUT:\n      return initialState;\n    default:\n      throw new Error(`Unhandled action type : ${action.type}`);\n  }\n};\n_c = AuthReducer;\nconst AuthContextFactory = dispatch => ({\n  login: async credentials => {\n    try {\n      const result = await login(credentials);\n      toast.success(`Wesh fréro ${result.user.username}, koi de neuf mageule  sa va ou koi ! `);\n      dispatch({\n        type: actionTypes.LOGIN_SUCCESS,\n        data: result\n      });\n    } catch (error) {\n      toast.error('Identifiant ou mot de passe invalide ');\n      dispatch({\n        type: actionTypes.LOGIN_FAILURE,\n        data: {\n          error\n        }\n      });\n    }\n  }\n});\n_c2 = AuthContextFactory;\nconst AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = React.useReducer(AuthReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        state,\n        ...AuthContextFactory(dispatch)\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AuthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c3 = AuthProvider;\nconst useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (!context) throw new Error('use Auth must be used inside a AuthProvider');\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { AuthProvider, useAuth };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AuthReducer\");\n$RefreshReg$(_c2, \"AuthContextFactory\");\n$RefreshReg$(_c3, \"AuthProvider\");","map":{"version":3,"names":["React","login","toast","AuthContext","createContext","actionTypes","LOGIN_SUCCESS","LOGIN_FAILURE","LOADING","LOGOUT","initialState","isAuthenticated","token","user","loading","error","AuthReducer","state","action","type","data","jwt","Error","AuthContextFactory","dispatch","credentials","result","success","username","AuthProvider","children","useReducer","useAuth","context","useContext"],"sources":["C:/Users/basti/Documents/MyDigitalSchool/React/MDS-B3-2023-Food-Delivery/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React from 'react'\r\nimport { login } from '../services/Api'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nconst actionTypes = {\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  LOADING: 'LOADING',\r\n  LOGOUT: 'LOGOUT'\r\n\r\n}\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  token: null,\r\n  user: null,\r\n  loading: false,\r\n  error: null\r\n}\r\n\r\nconst AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        isAuthenticated: true,\r\n        token: action.data.jwt,\r\n        user: action.data.user,\r\n        loading: false,\r\n        error: null\r\n      }\r\n    case actionTypes.LOGIN_FAILURE:\r\n      return {\r\n        ...initialState,\r\n        error: action.data.error\r\n      }\r\n    case actionTypes.LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case actionTypes.LOGOUT:\r\n      return initialState\r\n    default:\r\n      throw new Error(`Unhandled action type : ${action.type}`)\r\n  }\r\n}\r\nconst AuthContextFactory = (dispatch) => ({\r\n  login: async (credentials) => {\r\n    try {\r\n      const result = await login(credentials)\r\n      toast.success(`Wesh fréro ${result.user.username}, koi de neuf mageule  sa va ou koi ! `)\r\n      dispatch({\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        data: result\r\n      })\r\n    } catch (error) {\r\n      toast.error('Identifiant ou mot de passe invalide ')\r\n      dispatch({\r\n        type: actionTypes.LOGIN_FAILURE,\r\n        data: { error }\r\n      })\r\n    }\r\n  }\r\n})\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = React.useReducer(AuthReducer, initialState)\r\n  return (\r\n    <>\r\n      <AuthContext.Provider value={{ state, ...AuthContextFactory(dispatch) }}>\r\n        {children}\r\n      </AuthContext.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useAuth = () => {\r\n  const context = React.useContext(AuthContext)\r\n  if (!context) throw new Error('use Auth must be used inside a AuthProvider')\r\n  return context\r\n}\r\n\r\nexport {\r\n  AuthProvider,\r\n  useAuth\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}