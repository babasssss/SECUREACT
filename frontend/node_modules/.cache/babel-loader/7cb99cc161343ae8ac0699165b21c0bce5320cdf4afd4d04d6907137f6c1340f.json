{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  },\n  timeout: 10000\n});\napi.interceptors.request.use(config => {\n  const authState = window.localStorage.getItem('AUTH');\n  const auth = JSON.parse(authState);\n  if (auth.user && auth.token) {\n    config.headers.Authorization = `Bearer ${auth.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst getIndex = async () => {\n  try {\n    const response = await api.get('/');\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// const getRestaurants = async () => {\n//   try {\n//     const response = await api.get('/restaurants?populate=*')\n//     return response.data\n//   } catch (error) {\n//     console.error(error)\n//   }\n// }\n\n// const getRestaurantById = async (id) => {\n//   try {\n//     const response = await api.get(`/restaurants/${id}?populate=*`)\n//     return response.data\n//   } catch (error) {\n//     console.error(error)\n//   }\n// }\n\n// const getDishesByRestaurantId = async (id) => {\n//   try {\n//     const response = await api.get(`/dishes?filters[restaurant][id][$eq]=${id}&populate=*`)\n//     return response.data\n//   } catch (error) {\n//     console.error(error)\n//   }\n// }\n\n// const createRestaurant = async (formData) => {\n//   try {\n//     const _data = {\n//       data: { // Spécifique à Strapi\n//         name: formData.name,\n//         description: formData.description,\n//         coordinates: {\n//           latitude: formData.latitude,\n//           longitude: formData.longitude\n//         }\n//       }\n//     }\n//     const response = await api.post('/restaurants', _data)\n//     return response.data\n//   } catch (error) {\n//     console.error(error)\n//   }\n// }\n// const login = async (credential) => {\n//   const response = await api.post('auth/local', credential)\n//   return response.data\n// }\n\n// const register = async (credential) => {\n//   const response = await api.post('auth/local/register', credential)\n//   return response.data\n// }\n\nexport {\n// getRestaurants,\n// getRestaurantById,\n// getDishesByRestaurantId,\n// createRestaurant,\n// login,\n// register,\ngetIndex };","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","Accept","timeout","interceptors","request","use","config","authState","window","localStorage","getItem","auth","JSON","parse","user","token","Authorization","error","Promise","reject","getIndex","response","get","console"],"sources":["C:/Users/basti/Documents/MyDigitalSchool/Production-React-NodeJS/SECUREACT/frontend/src/services/Api.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json'\r\n  },\r\n  timeout: 10000\r\n})\r\n\r\napi.interceptors.request.use(\r\n  config => {\r\n    const authState = window.localStorage.getItem('AUTH')\r\n    const auth = JSON.parse(authState)\r\n    if (auth.user && auth.token) {\r\n      config.headers.Authorization = `Bearer ${auth.token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nconst getIndex = async () => {\r\n  try {\r\n    const response = await api.get('/')\r\n    return response\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\n// const getRestaurants = async () => {\r\n//   try {\r\n//     const response = await api.get('/restaurants?populate=*')\r\n//     return response.data\r\n//   } catch (error) {\r\n//     console.error(error)\r\n//   }\r\n// }\r\n\r\n// const getRestaurantById = async (id) => {\r\n//   try {\r\n//     const response = await api.get(`/restaurants/${id}?populate=*`)\r\n//     return response.data\r\n//   } catch (error) {\r\n//     console.error(error)\r\n//   }\r\n// }\r\n\r\n// const getDishesByRestaurantId = async (id) => {\r\n//   try {\r\n//     const response = await api.get(`/dishes?filters[restaurant][id][$eq]=${id}&populate=*`)\r\n//     return response.data\r\n//   } catch (error) {\r\n//     console.error(error)\r\n//   }\r\n// }\r\n\r\n// const createRestaurant = async (formData) => {\r\n//   try {\r\n//     const _data = {\r\n//       data: { // Spécifique à Strapi\r\n//         name: formData.name,\r\n//         description: formData.description,\r\n//         coordinates: {\r\n//           latitude: formData.latitude,\r\n//           longitude: formData.longitude\r\n//         }\r\n//       }\r\n//     }\r\n//     const response = await api.post('/restaurants', _data)\r\n//     return response.data\r\n//   } catch (error) {\r\n//     console.error(error)\r\n//   }\r\n// }\r\n// const login = async (credential) => {\r\n//   const response = await api.post('auth/local', credential)\r\n//   return response.data\r\n// }\r\n\r\n// const register = async (credential) => {\r\n//   const response = await api.post('auth/local/register', credential)\r\n//   return response.data\r\n// }\r\n\r\nexport {\r\n  // getRestaurants,\r\n  // getRestaurantById,\r\n  // getDishesByRestaurantId,\r\n  // createRestaurant,\r\n  // login,\r\n  // register,\r\n  getIndex\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFR,GAAG,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACrD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,SAAS,CAAC;EAClC,IAAII,IAAI,CAACG,IAAI,IAAIH,IAAI,CAACI,KAAK,EAAE;IAC3BT,MAAM,CAACN,OAAO,CAACgB,aAAa,GAAI,UAASL,IAAI,CAACI,KAAM,EAAC;EACvD;EACA,OAAOT,MAAM;AACf,CAAC,EACDW,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CACF;AACD,MAAMG,QAAQ,GAAG,YAAY;EAC3B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAM3B,GAAG,CAAC4B,GAAG,CAAC,GAAG,CAAC;IACnC,OAAOD,QAAQ;EACjB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdM,OAAO,CAACN,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACAG,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}