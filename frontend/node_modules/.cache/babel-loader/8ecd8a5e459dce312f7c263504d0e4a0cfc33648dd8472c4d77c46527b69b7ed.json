{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  },\n  timeout: 10000\n});\napi.interceptors.request.use(config => {\n  const authState = window.localStorage.getItem('AUTH');\n  const auth = JSON.parse(authState);\n  if (auth.user && auth.token) {\n    config.headers.Authorization = `Bearer ${auth.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst getRestaurants = async () => {\n  try {\n    const response = await api.get('/restaurants?populate=*');\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst login = async credential => {\n  const response = await api.post('auth/local', credential);\n  return response.data;\n};\nconst register = async credential => {\n  const response = await api.post('auth/local/register', credential);\n  return response.data;\n};\nexport { login, register };","map":{"version":3,"names":["axios","toast","api","create","baseURL","process","env","REACT_APP_API_URL","headers","Accept","timeout","interceptors","request","use","config","authState","window","localStorage","getItem","auth","JSON","parse","user","token","Authorization","error","Promise","reject","getRestaurants","response","get","data","console","login","credential","post","register"],"sources":["C:/Users/basti/Documents/MyDigitalSchool/Production-React-NodeJS/SECUREACT/frontend/src/services/Api.js"],"sourcesContent":["import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json'\r\n  },\r\n  timeout: 10000\r\n})\r\n\r\napi.interceptors.request.use(\r\n  config => {\r\n    const authState = window.localStorage.getItem('AUTH')\r\n    const auth = JSON.parse(authState)\r\n    if (auth.user && auth.token) {\r\n      config.headers.Authorization = `Bearer ${auth.token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nconst getRestaurants = async () => {\r\n  try {\r\n    const response = await api.get('/restaurants?populate=*')\r\n    return response.data\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nconst login = async (credential) => {\r\n  const response = await api.post('auth/local', credential)\r\n  return response.data\r\n}\r\n\r\nconst register = async (credential) => {\r\n  const response = await api.post('auth/local/register', credential)\r\n  return response.data\r\n}\r\n\r\nexport {\r\n  login,\r\n  register\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFR,GAAG,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACrD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,SAAS,CAAC;EAClC,IAAII,IAAI,CAACG,IAAI,IAAIH,IAAI,CAACI,KAAK,EAAE;IAC3BT,MAAM,CAACN,OAAO,CAACgB,aAAa,GAAI,UAASL,IAAI,CAACI,KAAM,EAAC;EACvD;EACA,OAAOT,MAAM;AACf,CAAC,EACDW,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CACF;AAED,MAAMG,cAAc,GAAG,YAAY;EACjC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAM3B,GAAG,CAAC4B,GAAG,CAAC,yBAAyB,CAAC;IACzD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAON,KAAK,EAAE;IACdO,OAAO,CAACP,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,MAAMQ,KAAK,GAAG,MAAOC,UAAU,IAAK;EAClC,MAAML,QAAQ,GAAG,MAAM3B,GAAG,CAACiC,IAAI,CAAC,YAAY,EAAED,UAAU,CAAC;EACzD,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMK,QAAQ,GAAG,MAAOF,UAAU,IAAK;EACrC,MAAML,QAAQ,GAAG,MAAM3B,GAAG,CAACiC,IAAI,CAAC,qBAAqB,EAAED,UAAU,CAAC;EAClE,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,SACEE,KAAK,EACLG,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}