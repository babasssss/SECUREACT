{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"component\", \"value\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport { getTabPanelUnstyledUtilityClass } from './tabPanelUnstyledClasses';\nimport useTabPanel from '../useTabPanel/useTabPanel';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var hidden = ownerState.hidden;\n  var slots = {\n    root: ['root', hidden && 'hidden']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabPanelUnstyledUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Unstyled Tabs](https://mui.com/base/react-tabs/)\n *\n * API:\n *\n * - [TabPanelUnstyled API](https://mui.com/base/api/tab-panel-unstyled/)\n */\nvar TabPanelUnstyled = /*#__PURE__*/React.forwardRef(function TabPanelUnstyled(props, ref) {\n  var _ref;\n  var children = props.children,\n    component = props.component,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useTabPanel = useTabPanel(props),\n    hidden = _useTabPanel.hidden,\n    getRootProps = _useTabPanel.getRootProps;\n  var ownerState = _extends({}, props, {\n    hidden: hidden\n  });\n  var classes = useUtilityClasses(ownerState);\n  var TabPanelRoot = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  var tabPanelRootProps = useSlotProps({\n    elementType: TabPanelRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      role: 'tabpanel',\n      ref: ref\n    },\n    ownerState: ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({}, tabPanelRootProps, {\n    children: !hidden && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanelUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The props used for each slot inside the TabPanel.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TabPanel.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n} : void 0;\nexport default TabPanelUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","useSlotProps","composeClasses","getTabPanelUnstyledUtilityClass","useTabPanel","useClassNamesOverride","jsx","_jsx","useUtilityClasses","ownerState","hidden","slots","root","TabPanelUnstyled","forwardRef","props","ref","_ref","children","component","slotProps","other","getRootProps","classes","TabPanelRoot","tabPanelRootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","additionalProps","role","className","process","env","NODE_ENV","propTypes","node","shape","oneOfType","func","object","value","number","string","isRequired"],"sources":["C:/Users/basti/Documents/MyDigitalSchool/React/MDS-B3-2023-Food-Delivery/frontend/node_modules/@mui/base/TabPanelUnstyled/TabPanelUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\", \"value\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport { getTabPanelUnstyledUtilityClass } from './tabPanelUnstyledClasses';\nimport useTabPanel from '../useTabPanel/useTabPanel';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    hidden\n  } = ownerState;\n  const slots = {\n    root: ['root', hidden && 'hidden']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabPanelUnstyledUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Unstyled Tabs](https://mui.com/base/react-tabs/)\n *\n * API:\n *\n * - [TabPanelUnstyled API](https://mui.com/base/api/tab-panel-unstyled/)\n */\nconst TabPanelUnstyled = /*#__PURE__*/React.forwardRef(function TabPanelUnstyled(props, ref) {\n  var _ref;\n  const {\n      children,\n      component,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    hidden,\n    getRootProps\n  } = useTabPanel(props);\n  const ownerState = _extends({}, props, {\n    hidden\n  });\n  const classes = useUtilityClasses(ownerState);\n  const TabPanelRoot = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  const tabPanelRootProps = useSlotProps({\n    elementType: TabPanelRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      role: 'tabpanel',\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({}, tabPanelRootProps, {\n    children: !hidden && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanelUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The props used for each slot inside the TabPanel.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TabPanel.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n} : void 0;\nexport default TabPanelUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}