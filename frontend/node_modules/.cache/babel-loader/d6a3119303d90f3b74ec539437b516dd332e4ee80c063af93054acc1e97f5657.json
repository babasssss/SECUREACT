{"ast":null,"code":"import _slicedToArray from \"C:/Users/basti/Documents/MyDigitalSchool/React/MDS-B3-2023-Food-Delivery/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"colorSchemes\", \"components\"],\n  _excluded2 = [\"light\"];\nimport { deepmerge } from '@mui/utils';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  var _theme$colorSchemes = theme.colorSchemes,\n    colorSchemes = _theme$colorSchemes === void 0 ? {} : _theme$colorSchemes,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded);\n  var _cssVarsParser = cssVarsParser(otherTheme, parserConfig),\n    rootVars = _cssVarsParser.vars,\n    rootCss = _cssVarsParser.css,\n    rootVarsWithDefaults = _cssVarsParser.varsWithDefaults;\n  var themeVars = rootVarsWithDefaults;\n  var colorSchemesMap = {};\n  var light = colorSchemes.light,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, _excluded2);\n  Object.entries(otherColorSchemes || {}).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      scheme = _ref2[1];\n    var _cssVarsParser2 = cssVarsParser(scheme, parserConfig),\n      vars = _cssVarsParser2.vars,\n      css = _cssVarsParser2.css,\n      varsWithDefaults = _cssVarsParser2.varsWithDefaults;\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css: css,\n      vars: vars\n    };\n  });\n  if (light) {\n    // light color scheme vars should be merged last to set as default\n    var _cssVarsParser3 = cssVarsParser(light, parserConfig),\n      css = _cssVarsParser3.css,\n      vars = _cssVarsParser3.vars,\n      varsWithDefaults = _cssVarsParser3.varsWithDefaults;\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap.light = {\n      css: css,\n      vars: vars\n    };\n  }\n  var generateCssVars = function generateCssVars(colorScheme) {\n    if (!colorScheme) {\n      return {\n        css: rootCss,\n        vars: rootVars\n      };\n    }\n    return colorSchemesMap[colorScheme];\n  };\n  return {\n    vars: themeVars,\n    generateCssVars: generateCssVars\n  };\n}\nexport default prepareCssVars;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_excluded","_excluded2","deepmerge","cssVarsParser","prepareCssVars","theme","parserConfig","colorSchemes","otherTheme","rootVars","vars","rootCss","css","rootVarsWithDefaults","varsWithDefaults","themeVars","colorSchemesMap","light","otherColorSchemes","Object","entries","forEach","key","scheme","generateCssVars","colorScheme"],"sources":["C:/Users/basti/Documents/MyDigitalSchool/React/MDS-B3-2023-Food-Delivery/frontend/node_modules/@mui/system/esm/cssVars/prepareCssVars.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\", \"components\"],\n  _excluded2 = [\"light\"];\nimport { deepmerge } from '@mui/utils';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {}\n    } = theme,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = cssVarsParser(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      light\n    } = colorSchemes,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, _excluded2);\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = cssVarsParser(scheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (light) {\n    // light color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = cssVarsParser(light, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap.light = {\n      css,\n      vars\n    };\n  }\n  const generateCssVars = colorScheme => {\n    if (!colorScheme) {\n      return {\n        css: rootCss,\n        vars: rootVars\n      };\n    }\n    return colorSchemesMap[colorScheme];\n  };\n  return {\n    vars: themeVars,\n    generateCssVars\n  };\n}\nexport default prepareCssVars;"],"mappings":";AAAA,OAAOA,6BAA6B,MAAM,yDAAyD;AACnG,IAAMC,SAAS,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC;EAC9CC,UAAU,GAAG,CAAC,OAAO,CAAC;AACxB,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,cAAc,CAACC,KAAK,EAAEC,YAAY,EAAE;EAC3C;EACA,0BAEMD,KAAK,CADPE,YAAY;IAAZA,YAAY,oCAAG,CAAC,CAAC;IAEnBC,UAAU,GAAGT,6BAA6B,CAACM,KAAK,EAAEL,SAAS,CAAC;EAC9D,qBAIIG,aAAa,CAACK,UAAU,EAAEF,YAAY,CAAC;IAHnCG,QAAQ,kBAAdC,IAAI;IACCC,OAAO,kBAAZC,GAAG;IACeC,oBAAoB,kBAAtCC,gBAAgB;EAElB,IAAIC,SAAS,GAAGF,oBAAoB;EACpC,IAAMG,eAAe,GAAG,CAAC,CAAC;EACpB,IACFC,KAAK,GACHV,YAAY,CADdU,KAAK;IAEPC,iBAAiB,GAAGnB,6BAA6B,CAACQ,YAAY,EAAEN,UAAU,CAAC;EAC7EkB,MAAM,CAACC,OAAO,CAACF,iBAAiB,IAAI,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,gBAAmB;IAAA;MAAjBC,GAAG;MAAEC,MAAM;IAC3D,sBAIIpB,aAAa,CAACoB,MAAM,EAAEjB,YAAY,CAAC;MAHrCI,IAAI,mBAAJA,IAAI;MACJE,GAAG,mBAAHA,GAAG;MACHE,gBAAgB,mBAAhBA,gBAAgB;IAElBC,SAAS,GAAGb,SAAS,CAACa,SAAS,EAAED,gBAAgB,CAAC;IAClDE,eAAe,CAACM,GAAG,CAAC,GAAG;MACrBV,GAAG,EAAHA,GAAG;MACHF,IAAI,EAAJA;IACF,CAAC;EACH,CAAC,CAAC;EACF,IAAIO,KAAK,EAAE;IACT;IACA,sBAIId,aAAa,CAACc,KAAK,EAAEX,YAAY,CAAC;MAHpCM,GAAG,mBAAHA,GAAG;MACHF,IAAI,mBAAJA,IAAI;MACJI,gBAAgB,mBAAhBA,gBAAgB;IAElBC,SAAS,GAAGb,SAAS,CAACa,SAAS,EAAED,gBAAgB,CAAC;IAClDE,eAAe,CAACC,KAAK,GAAG;MACtBL,GAAG,EAAHA,GAAG;MACHF,IAAI,EAAJA;IACF,CAAC;EACH;EACA,IAAMc,eAAe,GAAG,SAAlBA,eAAe,CAAGC,WAAW,EAAI;IACrC,IAAI,CAACA,WAAW,EAAE;MAChB,OAAO;QACLb,GAAG,EAAED,OAAO;QACZD,IAAI,EAAED;MACR,CAAC;IACH;IACA,OAAOO,eAAe,CAACS,WAAW,CAAC;EACrC,CAAC;EACD,OAAO;IACLf,IAAI,EAAEK,SAAS;IACfS,eAAe,EAAfA;EACF,CAAC;AACH;AACA,eAAepB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}